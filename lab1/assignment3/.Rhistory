help(lm)
?sample()
set <-sample(1:n, nrow(input), )
set.seed(12345)
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
setwd("~/TDDE01/TDDE01/lab1/assignment3")
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
set.seed(12345)
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
colnames(Dataframe) <- c('Tpregnant', 'PlaGluCon', 'BloodPr', 'TriSkinT', 'Insulin', 'BMI', 'DPedFunc', 'Age', 'Diabetes')
input <- Dataframe[, c('Age', 'PlaGluCon', 'Diabetes')]
plot(x = input$Age, y = input$PlaGluCon, col= (input$Diabetes + 1))
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q2: glm(). lm() linnear regression
n <- dim(input)
set <-sample(1:n, nrow(input), )
#Q2: glm(). lm() linnear regression
n <- dim(input)
set <-sample(1:n, nrow(input))
#Q2: glm(). lm() linnear regression
n <- dim(input)[1]
#Q2: glm(). lm() linnear regression
n <- nrow(input)
set <-sample(1:n, nrow(input))
set <-sample(1:n, nrow(input), floor(n*0.5))
?sample
set <-sample(2, 1:n, replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input, 1:n, replace = TRUE, prob = c(0.8, 0.2))
set <-sample(1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set
#Q2: glm(). lm() linnear regression
n <- nrow(input)
set <-sample(1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input[row()]) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(NROW(input)) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input$Age) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(t(input)) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
input
set <-sample(1:n, input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(1, input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(2, input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input, replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set
test <- set
set <-sample(input, replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input, replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(1:n,replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE)] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
View(set)
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- input[set,]
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set[(1:(0.8*n)),]
test <- set[(0.8*(n+1)),n]
test <- set[((0.8*n)+1)):n,]
test <- set[((0.8*n)+1):n,]
m = glm(Diabetes ~ Age + PlaGluCon, Data = training)
m = glm(Diabetes ~ Age + PlaGluCon, data = training)
m = glm(Diabetes ~ Age + PlaGluCon,
data = training, family = "biniomial")
m = glm(Diabetes ~ Age + PlaGluCon,
data = training, family = "binomial")
summary(m)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
set.seed(12345)
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
colnames(Dataframe) <- c('Tpregnant', 'PlaGluCon', 'BloodPr', 'TriSkinT', 'Insulin', 'BMI', 'DPedFunc', 'Age', 'Diabetes')
input <- Dataframe[, c('Age', 'PlaGluCon', 'Diabetes')]
plot(x = input$Age, y = input$PlaGluCon, col= (input$Diabetes + 1))
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q2: glm(). lm() linnear regression
n <- nrow(input)
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set[(1:(0.8*n)),] #80 % training data.
test <- set[((0.8*n)+1):n,] #20 % Test data
m = glm(Diabetes ~ Age + PlaGluCon,
data = training, family = "binomial")
summary(m)
mymodel = glm(Diabetes ~ Age + PlaGluCon,
data = training, family = "binomial")
summary(mymodel)
res <- predict(mymodel, test, type = response)
res <- predict(mymodel, test, type = "response")
confmatrix <- table(training$Diabetes, Predicted_Value = res > 0.5)
confmatrix <- table(Actual_Value = training$Diabetes, Predicted_Value = res > 0.5)
confmatrix <- table(Actual_Value = test$Diabetes, Predicted_Value = res > 0.5)
confmatrix
#Accuracy
(confmatrix[1,1] + confmatrix[2,2])/sum(confmatrix)
?predict
mymodel = glm(Diabetes ~ PlaGlUCon + Age,
data = training, family = "binomial")
mymodel = glm(Diabetes ~ PlaGluCon + Age,
data = training, family = "binomial")
summary(mymodel)
res <- predict(mymodel, test, type = "response")
confmatrix <- table(Actual_Value = test$Diabetes, Predicted_Value = res > 0.5)
#Accuracy
(confmatrix[1,1] + confmatrix[2,2])/sum(confmatrix)
summ(mymodel)
library(summarytools)
library(summ)
library(dplyr)
summ(mymodel)
library(jtools)
summ(mymodel)
summary(mymodel)
summary(mymodel)
summ(mymodel)
summ(mymodel, confint = TRUE)
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
summary(mymodel)
View(mymodel)
View(mymodel)
View(input)
View(input)
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
install.packages("tidyverse")
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
View(res)
View(res)
View(res)
View(input)
View(input)
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
confmatrix
?function
fg
1 - sum(diag(confmatrix))/nrow(test)
#Accuracy
(confmatrix[1,1] + confmatrix[2,2])/sum(confmatrix)
#Missclassification
missclas = (1 - sum(diag(confmatrix))/nrow(test))
#Accuracy
acuracy = (confmatrix[1,1] + confmatrix[2,2])/sum(confmatrix)
View(input)
View(input)
View(res)
View(res)
nrow(res)
nrow(input)
View(res)
View(input)
View(input)
View(training)
View(res)
View(set)
View(set)
View(test)
View(test)
ggplot(data = res, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
dfres = as.data.frame(res)
ggplot(data = res, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = dfres, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = test, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
View(test_mat)
View(test_mat)
test_mat = matrix(test[,-3])
ggplot(data = test, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
View(test_mat)
View(test_mat)
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
View(test_mat)
View(test_mat)
test_mat = table(res, test$Age, test$PlaGluCon)
test_mat = table(res, Age = test$Age, PlaGluCon = test$PlaGluCon)
test_mat = data_frame(res, Age = test$Age, PlaGluCon = test$PlaGluCon)
test_mat = matrix(res, Age = test$Age, PlaGluCon = test$PlaGluCon)
test_mat = matrix(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon))
test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = as.matrix(res['V1'].copy())
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = as.matrix(res['V1'])
View(asd)
View(asd)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = as.matrix(res[V1])
res.type()
type(res)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = as.matrix(res$V1)
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd[1,] = res[1,]
View(asd)
View(asd)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd[,1] = res[,1]
ggplot(data = test, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
source("~/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
View(asd)
View(asd)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = data.frame(res,test)
View(asd)
View(asd)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = data.frame(test,res)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = data.frame(test,res)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = res)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
na.string
?na.string
?na.strings
?na.strings
?read.csv
?c
?sapply
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE, na.strings = c(""))
sapply(Dataframe, function(x) sum(is.na(x)))
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = data.frame(test,est= 1 > 0.5)
#test_mat = matrix(c(res, as.matrix(Age = test$Age), as.matrix(PlaGluCon = test$PlaGluCon)))
asd = data.frame(test,est= res > 0.5)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = res)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
?factor?
k
?factor
input$Diabetes = factor(input$Diabetes, levels = (0,1), labels=c("Healthy", "Sick"))
input$Diabetes = factor(as.vector(input$Diabetes), levels = (0,1), labels=c("Healthy", "Sick"))
input$Diabetes = factor(as.matrix(input$Diabetes), levels = (0,1), labels=c("Healthy", "Sick"))
input
input <- Dataframe[, c('Age', 'PlaGluCon', 'Diabetes' > 0.5)]
input <- Dataframe[, c('Age', 'PlaGluCon', Dataframe$Diabetes > 0.5)]
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes < 0.5)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
res <- as.matrix(predict(mymodel, test, type = "response"))
Threshold = 0.5
confmatrix <- table(Actual_Value = test$Diabetes, Predicted_Value = res > Threshold)
confmatrix#Accuracy
#Q2.2 --> p = p(y = 1 | x) = e^(θ0+θ1x1+θ2x2)/(1 + e^(θ0+θ1x1+θ2x2)
#Where θ = ()
summary(mymodel)
?coef
coef(mymodel)
