help(lm)
?sample()
set <-sample(1:n, nrow(input), )
set.seed(12345)
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
setwd("~/TDDE01/TDDE01/lab1/assignment3")
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
set.seed(12345)
Dataframe = read.csv("pima-indians-diabetes.csv", header = FALSE)
colnames(Dataframe) <- c('Tpregnant', 'PlaGluCon', 'BloodPr', 'TriSkinT', 'Insulin', 'BMI', 'DPedFunc', 'Age', 'Diabetes')
input <- Dataframe[, c('Age', 'PlaGluCon', 'Diabetes')]
plot(x = input$Age, y = input$PlaGluCon, col= (input$Diabetes + 1))
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q2: glm(). lm() linnear regression
n <- dim(input)
set <-sample(1:n, nrow(input), )
#Q2: glm(). lm() linnear regression
n <- dim(input)
set <-sample(1:n, nrow(input))
#Q2: glm(). lm() linnear regression
n <- dim(input)[1]
#Q2: glm(). lm() linnear regression
n <- nrow(input)
set <-sample(1:n, nrow(input))
set <-sample(1:n, nrow(input), floor(n*0.5))
?sample
set <-sample(2, 1:n, replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input, 1:n, replace = TRUE, prob = c(0.8, 0.2))
set <-sample(1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set
#Q2: glm(). lm() linnear regression
n <- nrow(input)
set <-sample(1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input[row()]) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(NROW(input)) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input$Age) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(t(input)) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
input
set <-sample(1:n, input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(1, input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(2, input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input, replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set
test <- set
set <-sample(input, replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(input, replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-sample(1:n,replace = FALSE) #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE)] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
View(set)
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- input[set,]
set <-input[sample(1:n,replace = FALSE), 1:3] #1:n, nrow(input), replace = TRUE, prob = c(0.8, 0.2))
training <- set[(1:(0.8*n)),]
test <- set[(0.8*(n+1)),n]
test <- set[((0.8*n)+1)):n,]
test <- set[((0.8*n)+1):n,]
m = glm(Diabetes ~ Age + PlaGluCon, Data = training)
m = glm(Diabetes ~ Age + PlaGluCon, data = training)
m = glm(Diabetes ~ Age + PlaGluCon,
data = training, family = "biniomial")
m = glm(Diabetes ~ Age + PlaGluCon,
data = training, family = "binomial")
summary(m)
