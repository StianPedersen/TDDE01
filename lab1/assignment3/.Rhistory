#Q3.1 --> Report the decision boundary equation:
#f(x) = 1- f(x) --> e^(θTx)/(1 + e^(θTx)) = 1/(1 + e^(θTx))
coef(mymodel) # = θT
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
setwd("~/TDDE01/TDDE01/lab1/assignment3")
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
θ0 = coef(mymodel)[1]
θ1 = coef(mymodel)[2]
θ2 = coef(mymodel)[3]
#Q3.2 --> Add curve showing dec bound
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw() +
geom_hline(yintercept = (θ0/θ2))
#Q3.2 --> Add curve showing dec bound
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw() +
geom_abline(intercept = (θ0/θ2), slope = (θ1/θ2))
#Q3.2 --> Add curve showing dec bound
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw() +
geom_abline(intercept = (θ0/θ2), slope = (θ1/θ2), color = "red")
θ0/θ2
θ2 = coef(mymodel)[3]
coef(mymodel)[3]
θ0 = coef(mymodel)[1]
θ1 = coef(mymodel)[3]
θ2 = coef(mymodel)[2]
#Q3.2 --> Add curve showing dec bound
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw() +
geom_abline(intercept = (θ0/θ2), slope = (θ1/θ2), color = "red")
θ0/θ2
θ1/θ2
#Q3.2 --> Add curve showing dec bound
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw() +
geom_abline(intercept = (-θ0/θ2), slope = (-θ1/θ2), color = "red")
#Q4.1 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.2
dataPlot2 = data.frame(test,est= res > Threshold)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q4.2 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.8
dataPlot2 = data.frame(test,est= res > Threshold)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q4.2 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.8
dataPlot2 = data.frame(test,est= res > Threshold)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q4.2 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.8
dataPlot3 = data.frame(test,est= res > Threshold)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q4.1 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.2
dataPlot2 = data.frame(test,est= res > Threshold)
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
ggplot(data = asd, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q4.1 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.2
dataPlot2 = data.frame(test,est= res > Threshold)
ggplot(data = dataPlot2, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
#Q4.2 --> Make the same kind of plot as in Q2 but with r=0.2
Threshold = 0.8
dataPlot3 = data.frame(test,est= res > Threshold)
ggplot(data = dataPlot3, mapping = aes(x = Age, y = PlaGluCon, colour = est)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
?glm
Z1 = training$PlaGluCon^4
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
basis_function <-
Z1 = training$PlaGluCon^4
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
basis_function <-
Z1 = training$PlaGluCon^4
Z2 = (training$Age^3)(training$PlaGluCon^1)
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
basis_function <-
Z1 = training$PlaGluCon^4
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
basis_function <- c(
Z1 = training$PlaGluCon^4,
Z2 = (training$Age^3)(training$PlaGluCon^1),
Z3 = (training$Age^2)(training$PlaGluCon^2),
Z4 = (training$Age^1)(training$PlaGluCon^3),
Z5 = (training$Age^0)(training$PlaGluCon^4))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
basis_function <- table(
Z1 = training$PlaGluCon^4,
Z2 = (training$Age^3)(training$PlaGluCon^1),
Z3 = (training$Age^2)(training$PlaGluCon^2),
Z4 = (training$Age^1)(training$PlaGluCon^3),
Z5 = (training$Age^0)(training$PlaGluCon^4))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
basis_function <- table(
Z1 = training$PlaGluCon^4,
Z2 = (training$Age^3)(training$PlaGluCon^1),
Z3 = (training$Age^2)(training$PlaGluCon^2),
Z4 = (training$Age^1)(training$PlaGluCon^3),
Z5 = (training$Age^0)(training$PlaGluCon^4))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
Z1 = training$PlaGluCon^4,
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
Z1 = training$PlaGluCon^4
Z2 = (training$Age^3)(training$PlaGluCon^1)
Z2 = (training$Age^3)*(training$PlaGluCon^1)
Z3 = (training$Age^2)*(training$PlaGluCon^2)
Z4 = (training$Age^1)*(training$PlaGluCon^3)
Z5 = (training$Age^0)*(training$PlaGluCon^4)
mymodel2 = glm(Diabetes ~ PlaGluCon + Age + Z1 + Z2 + Z3 + Z4 + Z5,
data = training, family = "binomial")
res <- as.matrix(predict(mymodel2, test, type = "response"))
mymodel2 = glm(Diabetes ~ PlaGluCon + Age + Z1 + Z2 + Z3 + Z4 + Z5,
data = training, family = "binomial")
res <- as.matrix(predict(mymodel2, test, type = "response"))
summary(mymodel2)
coef(mymodel2)
input <- Dataframe[, c('Age', 'PlaGluCon', 'Diabetes', 'Z1' = 1)]
?as.data.frame
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Dataframe$PlaGluCon*3)
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = Dataframe$PlaGluCon^3)
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = Dataframe$PlaGluCon^4, Z2 = (Dataframe$Age^3)*(Dataframe$PlaGluCon^1))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = Dataframe$PlaGluCon^4, Z2 = (Dataframe$Age^3)*(Dataframe$PlaGluCon^1),
Z3 = Dataframe$Age^2)*(Dataframe$PlaGluCon^2, Z4= Dataframe$Age^1)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0)                                                                                 ))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = (Dataframe$Age^0)*(Dataframe$PlaGluCon^4), Z2 = (Dataframe$Age^1)*(Dataframe$PlaGluCon^3),
Z3 = (Dataframe$Age^2)*(Dataframe$PlaGluCon^2), Z4= (Dataframe$Age^3)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0))                                                                                 ))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = (Dataframe$Age^0)*(Dataframe$PlaGluCon^4), Z2 = (Dataframe$Age^1)*(Dataframe$PlaGluCon^3), +
Z3 = (Dataframe$Age^2)*(Dataframe$PlaGluCon^2), Z4= (Dataframe$Age^3)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0))                                                                                 ))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = (Dataframe$Age^0)*(Dataframe$PlaGluCon^4), Z2 = (Dataframe$Age^1)*(Dataframe$PlaGluCon^3), Z3 = (Dataframe$Age^2)*(Dataframe$PlaGluCon^2), Z4= (Dataframe$Age^3)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0))                                                                                 ))
#5.1 --> BASIS FFUNCTION EXPANSION. NEW FEATURES Z1-Z5
input5 <- data.frame(input, Z1 = (Dataframe$Age^0)*(Dataframe$PlaGluCon^4), Z2 = (Dataframe$Age^1)*(Dataframe$PlaGluCon^3), Z3 = (Dataframe$Age^2)*(Dataframe$PlaGluCon^2), Z4= (Dataframe$Age^3)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0))
input <- data.frame(Dataframe[, c('Age', 'PlaGluCon', 'Diabetes')], Z1 = (Dataframe$Age^0)*(Dataframe$PlaGluCon^4), Z2 = (Dataframe$Age^1)*(Dataframe$PlaGluCon^3), Z3 = (Dataframe$Age^2)*(Dataframe$PlaGluCon^2), Z4= (Dataframe$Age^3)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0))
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
#Missclassification
missclass = (1 - sum(diag(confmatrix))/nrow(test))
missclass
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = res > 0.5)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
coef(mymodel2)
source("C:/Users/albre/TDDE01/TDDE01/lab1/assignment3/assignment3_logistic_regression_basis_function_expansion.R", echo=TRUE)
rlang::last_error()
dataPlot4 = data.frame(test,est= res > Threshold)
ggplot(data = dataPlot4, mapping = aes(x = Age, y = PlaGluCon, colour = res > 0.5)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") +
theme_bw()
?read.csv
input <- data.frame(Dataframe[, c('Age', 'PlaGluCon', 'Diabetes')],
Z1 = (Dataframe$Age^0)*(Dataframe$PlaGluCon^4), Z2 = (Dataframe$Age^1)*(Dataframe$PlaGluCon^3), Z3 = (Dataframe$Age^2)*(Dataframe$PlaGluCon^2), Z4= (Dataframe$Age^3)*(Dataframe$PlaGluCon^1), Z5 = (Dataframe$Age^4)*(Dataframe$PlaGluCon^0))
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") + #Labels, can change x and why too i suppose
theme_bw() #Theme black & White
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
# geom_point() +
labs(title = "Plasma Glucose Concentration as a function of age") + #Labels, can change x and why too i suppose
theme_bw() #Theme black & White
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
geom_point() + #Creates the dotted data
labs(title = "Plasma Glucose Concentration as a function of age") + #Labels, can change x and why too i suppose
theme_bw() #Theme black & White
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
geom_point() + #Creates the dotted data
labs(title = "Plasma Glucose Concentration as a function of age") + #Labels, can change x and why too i suppose
theme_bw() #Theme black & White
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
geom_point() + #Creates the dotted data
labs(title = "Plasma Glucose Concentration as a function of age", colour = Diabetes) + #Labels, can change x and why too i suppose
theme_bw() #Theme black & White
ggplot(data = input, mapping = aes(x = Age, y = PlaGluCon, colour = Diabetes > 0.5)) +
geom_point() + #Creates the dotted data
labs(title = "Plasma Glucose Concentration as a function of age", colour = "Diabetes") + #Labels, can change x and why too i suppose
theme_bw() #Theme black & White
